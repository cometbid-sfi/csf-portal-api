name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Copy API specs and docs
        run: |
          # Ensure public directory exists in dist
          mkdir -p dist/public/specs/docs
          
          # Copy OpenAPI specs
          cp -r public/specs/*.yaml dist/public/specs/
          
          # Copy docs if they exist
          if [ -d "public/specs/docs" ]; then
            cp -r public/specs/docs/* dist/public/specs/docs/
          fi

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: Deploy to GitHub Pages
        run: |
          # Configure git globally
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions@github.com"
          
          # Navigate to dist folder and prepare for deployment
          cd ./dist
          touch .nojekyll
          
          # Debug - list files to verify content
          echo "Contents of dist directory:"
          ls -la
          echo "Contents of public/specs directory (if exists):"
          ls -la public/specs || echo "Directory not found"
          
          # Initialize git with main as default branch
          git init -b main
          
          # Add and commit files
          git add -A
          git commit -m "Deploy to GitHub Pages"
          
          # Push to gh-pages branch
          git push -f https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main:gh-pages
